{"remainingRequest":"/Users/aqamine/Documents/GitHub/gigsy/admin_f/node_modules/babel-loader/lib/index.js!/Users/aqamine/Documents/GitHub/gigsy/admin_f/node_modules/eslint-loader/index.js??ref--14-0!/Users/aqamine/Documents/GitHub/gigsy/admin_f/src/store/modules/users/getters.js","dependencies":[{"path":"/Users/aqamine/Documents/GitHub/gigsy/admin_f/src/store/modules/users/getters.js","mtime":1652306157784},{"path":"/Users/aqamine/Documents/GitHub/gigsy/admin_f/babel.config.js","mtime":1651345758829},{"path":"/Users/aqamine/Documents/GitHub/gigsy/admin_f/node_modules/cache-loader/dist/cjs.js","mtime":1651345598852},{"path":"/Users/aqamine/Documents/GitHub/gigsy/admin_f/node_modules/babel-loader/lib/index.js","mtime":1651345599940},{"path":"/Users/aqamine/Documents/GitHub/gigsy/admin_f/node_modules/eslint-loader/index.js","mtime":1651345598924}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIHVzZXJzOiBmdW5jdGlvbiB1c2VycyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnVzZXJzOwogIH0sCiAgZXJyb3JzOiBmdW5jdGlvbiBlcnJvcnMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5lcnJvcnM7CiAgfSwKICBzaG91bGRVcGRhdGU6IGZ1bmN0aW9uIHNob3VsZFVwZGF0ZShzdGF0ZSkgewogICAgdmFyIGxhc3RGZXRjaCA9IHN0YXRlLmxhc3RGZXRjaDsKCiAgICBpZiAoIWxhc3RGZXRjaCkgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICB2YXIgY3VycmVudFRpbWVTdGFtcCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOyAvL3RoaXMgY2FsY3VsZSBtZWFucyBsYXN0IGZldGNoIG1vcmUgdGhhbiAxIG1pbnV0ZSBzbyBpdHMgcmV0dXJuIHRydWUKCiAgICByZXR1cm4gKGN1cnJlbnRUaW1lU3RhbXAgLSBsYXN0RmV0Y2gpIC8gMTAwMCA+IDYwOwogIH0KfTs="},{"version":3,"names":["users","state","errors","shouldUpdate","lastFetch","currentTimeStamp","Date","getTime"],"sources":["/Users/aqamine/Documents/GitHub/gigsy/admin_f/src/store/modules/users/getters.js"],"sourcesContent":["export default {\n    users(state) {\n        return state.users;\n    },\n    errors(state) {\n        return state.errors;\n    },\n    shouldUpdate(state) {\n        const lastFetch = state.lastFetch;\n        if (!lastFetch) {\n            return true;\n        }\n        const currentTimeStamp = new Date().getTime();\n        //this calcule means last fetch more than 1 minute so its return true\n        return (currentTimeStamp - lastFetch) / 1000 > 60;\n    }\n}"],"mappings":"AAAA,eAAe;EACXA,KADW,iBACLC,KADK,EACE;IACT,OAAOA,KAAK,CAACD,KAAb;EACH,CAHU;EAIXE,MAJW,kBAIJD,KAJI,EAIG;IACV,OAAOA,KAAK,CAACC,MAAb;EACH,CANU;EAOXC,YAPW,wBAOEF,KAPF,EAOS;IAChB,IAAMG,SAAS,GAAGH,KAAK,CAACG,SAAxB;;IACA,IAAI,CAACA,SAAL,EAAgB;MACZ,OAAO,IAAP;IACH;;IACD,IAAMC,gBAAgB,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAzB,CALgB,CAMhB;;IACA,OAAO,CAACF,gBAAgB,GAAGD,SAApB,IAAiC,IAAjC,GAAwC,EAA/C;EACH;AAfU,CAAf"}]}